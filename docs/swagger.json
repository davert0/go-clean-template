{
    "swagger": "2.0",
    "info": {
        "description": "Using a comment service as an example",
        "title": "Go Clean Template API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/comment/comments": {
            "get": {
                "description": "Show all comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Show comments",
                "operationId": "comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CommentsList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/comments/do-comment": {
            "post": {
                "description": "Comment a entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Comment",
                "operationId": "do-comment",
                "parameters": [
                    {
                        "description": "Set up comment",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Comment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "entity_ref_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "entity.CommentsList": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                }
            }
        },
        "request.Comment": {
            "type": "object",
            "required": [
                "created_by",
                "entity_id",
                "entity_type",
                "text"
            ],
            "properties": {
                "created_by": {
                    "type": "string",
                    "example": "user_kek"
                },
                "entity_id": {
                    "type": "string",
                    "example": "shot_12"
                },
                "entity_type": {
                    "type": "string",
                    "example": "shot"
                },
                "text": {
                    "type": "string",
                    "example": "good job"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                }
            }
        }
    }
}